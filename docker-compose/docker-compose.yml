version: '3.9'

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.0.0
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_HTTP_URL: http://139.59.214.202:18545 
        ETHEREUM_JSONRPC_TRACE_URL: http://139.59.214.202:18545 
        ETHEREUM_JSONRPC_WS_URL: ws://139.59.214.202:18545  
        CHAIN_ID: '4003'
    volumes:
      - ../dets:/app/dets

  nft_media_handler:
    depends_on:
      - backend
    extends:
      file: ./services/nft_media_handler.yml
      service: nft_media_handler
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.0.0

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend
    ports:
      - "3000:3000"

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        RELEASE_VERSION: 8.0.0
    environment:
      - DEBIAN_FRONTEND=noninteractive
    user: root
    command: >
      sh -c "if ! [ -e /usr/lib/x86_64-linux-gnu/libssl.so.3 ]; then apt update && apt install -y libssl3; fi && ./user-ops-indexer-server"

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
    ports:
      - "4000:4000"
